##
# You should look at the following URL's in order to grasp a solid understanding
# of Nginx configuration files in order to fully unleash the power of Nginx.
# http://wiki.nginx.org/Pitfalls
# http://wiki.nginx.org/QuickStart
# http://wiki.nginx.org/Configuration
#
# Generally, you will want to move this file somewhere, and start with a clean
# file but keep this around for reference. Or just disable in sites-enabled.
#
# Please see /usr/share/doc/nginx-doc/examples/ for more detailed examples.
##

# Default server configuration
#

        
server {
    listen 80;
    server_name vestivise.com  www.vestivise.com;
    return 301 https://$host$request_uri;
}

server {
	#listen 80 default_server;
	#listen [::]:80 default_server;

	# SSL configuration
	#
	listen 443 ssl default_server;
	listen [::]:443 ssl default_server;
	#
	# Note: You should disable gzip for SSL traffic.
	# See: https://bugs.debian.org/773332
	#
	# Read up on ssl_ciphers to ensure a secure configuration.
	# See: https://bugs.debian.org/765782
	#
	# Self signed certs generated by the ssl-cert package
	# Don't use them in a production server!
	#
	# include snippets/snakeoil.conf;

	root /var/www/Vestivise;

	# Add index.php to the list if you are using PHP
	index index.php index.html index.htm index.nginx-debian.html;

	#listen 443 ssl;

        server_name www.vestivise.com;

        ssl_certificate /etc/letsencrypt/live/www.vestivise.com/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/www.vestivise.com/privkey.pem;

	location / {
		# First attempt to serve request as file, then
		# as directory, then fall back to displaying a 404.
		#try_files $uri $uri/ =404;
		index   index.html index.htm index.php;
		try_files $uri $uri/ /index.php?q=$uri&$args;
	}
	
	location ~ /.well-known {
                allow all;
        }	
	
	location /blog {
		index index.php index.html index.htm;
		try_files $uri $uri/  /blog/index.php?q=$uri&$args;
	}

	location /press {
                index index.php index.html index.htm;
                try_files $uri $uri/  /press/index.php?q=$uri&$args;
        }
	
	location /contact {
		default_type "text/html";
		root /var/www/Vestivise;
		try_files  $uri $uri.html $uri/contact.html contact.html;
	}

	location /methodology{
                default_type "text/html";
                root /var/www/Vestivise;
                try_files  $uri $uri.html $uri/ methodology.html methodology.html;
        }

	location /motivation{
                default_type "text/html";
                root /var/www/Vestivise;
                try_files  $uri $uri.html $uri/motivation.html motivation.html;
        }
	
	location /security{
                default_type "text/html";
                root /var/www/Vestivise;
                try_files  $uri $uri.html $uri/security.html security.html;
        }


	location /terms{
                default_type "text/html";
                root /var/www/Vestivise;
                try_files  $uri $uri.html $uri/terms.html terms.html;
        }
	
	location = /favicon.ico { log_not_found off; access_log off; }
        location = /robots.txt { log_not_found off; access_log off; allow all; }
        location  ~* \.(css|gif|ico|jpeg|jpg|js|png)$ {
               expires max;
               log_not_found off;
        }

	# pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
	#
	location ~ /blog/.+\.php$ {
		root /var/www/Vestivise;
		try_files $uri $uri/ /index.php?q=$uri&$args;
                include fastcgi_params;
		fastcgi_split_path_info ^(.+\.php)(/.+)$;
                fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;
                fastcgi_param DOCUMENT_ROOT $realpath_root;
		fastcgi_pass unix:/run/php/php7.0-fpm.sock;
	}
	
	location ~ /press/.+\.php$ {
                root /var/www/Vestivise;
                try_files $uri $uri/ /index.php?q=$uri&$args;
                include fastcgi_params;
                fastcgi_split_path_info ^(.+\.php)(/.+)$;
                fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;
                fastcgi_param DOCUMENT_ROOT $realpath_root;
                fastcgi_pass unix:/run/php/php7.0-fpm.sock;
        }	

	location ~ /\.ht {
            deny all;
        }

	# deny access to .htaccess files, if Apache's document root
	# concurs with nginx's one
	#
	#location ~ /\.ht {
	#	deny all;
	#}
}


# Virtual Host configuration for example.com
#
# You can move that to a different file under sites-available/ and symlink that
# to sites-enabled/ to enable it.
#
#server {
#	listen 80;
#	listen [::]:80;
#
#	server_name example.com;
#
#	root /var/www/example.com;
#	index index.html;
#
#	location / {
#		try_files $uri $uri/ =404;
#	}
#}
